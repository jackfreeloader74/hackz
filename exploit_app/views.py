from django.shortcuts import render
from django.http import HttpResponse

from exploit_app.models import Program, Command

from django.shortcuts import render, get_object_or_404
from django.core.paginator import Paginator

# Create your views here.
def index(request):
    return HttpResponse("Hello World!")


def command_view(request, command_id):
    return HttpResponse("Hello World!")

def program_view(request, program_id):
    paginate_by = 2
    program = get_object_or_404(Program, pk=program_id)

    ## Commands
    command_list = program.command_set.all()
    paginator = Paginator(command_list, 10)
    page_number = request.GET.get('page')
    page_obj = paginator.get_page(page_number)

    references = program.references.all()

    stage_list = program.stages.all()
    stage_list = [str(element) for element in stage_list]
    presentable_stage_list  = ", ".join(stage_list)


    context = {
                'program': program,
                'command_list' : command_list,
                'page_obj' : page_obj,
                'presentable_stage_list' : presentable_stage_list,
                'references' : references
              }

    return render(request, 'exploit_app/program.html', context)



def programm_search_view(request):
    return HttpResponse("Hello World!")

# Display page used to search for commands
def command_search_view(request):
    return HttpResponse("Hello World!")



def retrieveCommandInfo(request):

    #  Make SQL connection

    # return SQL into JSON

    return json_object

# Return a list of commands with th provided tag(s)
def searchCommandsByTag(request):

    #  Make SQL connection

    # return SQL into JSON

    return json_object



    # Search programmes by:
    # Name, target, stage
# return - program name, target, description, references, list of commands, list of stages
def searchProgrammes(request):

    #  Make SQL connection


    # return SQL into JSON
    return json_object



    # Search programmes by:
    # Name, target, stage
# return - program name, target, description, references, list of commands, list of stages
def searchProgrammes(request):

    #  Make SQL connection


    # return SQL into JSON
    return json_object
